{"version":3,"sources":["components/ShowCustomers.jsx","components/validation.jsx","components/AddCustomer.jsx","App.js","reportWebVitals.js","index.js"],"names":["ShowCustomers","count","useState","showCustomers","setShow","name","email","contactNo","address","customers","setCustomers","useEffect","fetch","then","res","ok","json","jsonRes","class","id","onClick","type","value","className","map","customer","validation","errors","test","error","AddCustomer","setCustomer","setErrors","dataIsCorrect","setDataIsCorrect","handleChange","e","target","prevInput","Object","keys","length","newCustomer","axios","post","alert","get","onSubmit","preventDefault","for","onChange","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0b2ddb49.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction ShowCustomers(){\r\n    \r\n            let count=1;\r\n\r\n            const [showCustomers, setShow]=useState(false)\r\n\r\n            const [customers, setCustomers] = useState([{\r\n                name: '',\r\n                email: '',\r\n                contactNo: '',\r\n                address: ''\r\n            }])\r\n            \r\n            useEffect(() => {\r\n                fetch('/allCustomers').then(res => {\r\n                    if (res.ok) {\r\n                        return res.json()\r\n                    }\r\n                }).then(jsonRes => setCustomers(jsonRes))\r\n            })\r\n            \r\n            \r\n\r\n    return(\r\n        <div>\r\n            <center>\r\n            <div class=\"table_buttons\">\r\n                <input id=\"table_button\" onClick={()=>setShow(true)} class=\"button\" type=\"submit\" value=\"Show customers\" />\r\n                <input id=\"table_button\" onClick={()=>setShow(false)} class=\"button\" type=\"submit\" value=\"Hide customers\" />\r\n            </div>\r\n            {showCustomers&&\r\n              <div class=\"customers\">\r\n           \r\n                    <table className=\"col-12\">\r\n\r\n                              <tr class=\"table_header\">\r\n                              <th>No.</th>\r\n                              <th>Name</th>\r\n                              <th>Email</th>\r\n                              <th>Contact No.</th>\r\n                              <th>Address</th>\r\n                              \r\n                              </tr>\r\n\r\n                        {customers.map(customer => {\r\n                            return (\r\n                                <tr>\r\n                                <td>{count++}</td>\r\n                                <td>{customer.name}</td>\r\n                                <td>{customer.email}</td>\r\n                                <td>{customer.contactNo}</td>\r\n                                <td>{customer.address}</td>                          \r\n                                </tr>\r\n                            )\r\n                            })\r\n                        }\r\n\r\n                     </table>\r\n\r\n                </div>\r\n            }\r\n            </center>\r\n        </div>\r\n        \r\n\r\n    )\r\n}\r\nexport default ShowCustomers;","\r\nconst validation=(customer)=>{\r\n    let errors={};\r\n\r\n    if(!customer.name){\r\n        errors.error=\"Name is required\"\r\n    }else if(!customer.email){\r\n        errors.error=\"Email is invalid\"\r\n    }else if(!/\\S+@\\S+\\.\\S+/.test(customer.email)){\r\n        errors.error=\"Email is invalid\"\r\n    }else if(!customer.contactNo){\r\n        errors.error=\"Contact number is invalid\"\r\n    }else if(!/^[0][1-9]\\d{9}$|^[1-9]\\d{9}$/.test(customer.contactNo)){\r\n        errors.error=\"Contact number is invalid\"\r\n    }else if(!customer.address){\r\n        errors.error=\"Address is required\"\r\n    }\r\n    \r\n    return errors;   \r\n};\r\n\r\nexport default validation;","import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {useState} from 'react';\r\nimport validation from './validation';\r\n\r\nfunction AddCustomer(){\r\n\r\n    const [customer, setCustomer] = useState([{\r\n        name: '',\r\n        email: '',\r\n        contactNo: '',\r\n        address: ''\r\n    }])\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [dataIsCorrect, setDataIsCorrect] = useState(false);\r\n\r\n    function handleChange(e){\r\n        const{name,value}=e.target;\r\n        setCustomer(prevInput=>{\r\n          return(\r\n            {\r\n              ...prevInput,\r\n              [name]:value\r\n            }\r\n          )\r\n        })\r\n      }\r\n    \r\n    useEffect(()=>{\r\n      if(Object.keys(errors).length===0&&dataIsCorrect){\r\n        const newCustomer={\r\n            name: customer.name ,\r\n            email: customer.email,\r\n            contactNo: customer.contactNo,\r\n            address: customer.address\r\n        }\r\n        axios.post('/addCustomer',newCustomer);\r\n            alert(\"---- New customer added ----\");\r\n            axios.get('/');\r\n        setCustomer({\r\n            name: '',\r\n            email: '',\r\n            contactNo: '',\r\n            address: ''\r\n        });\r\n      }\r\n    },[errors]);\r\n\r\n      function addCustomer(e){\r\n        e.preventDefault();\r\n        setErrors(validation(customer));\r\n        setDataIsCorrect(true);\r\n    }\r\n        \r\n\r\n    return(\r\n        <div class=\"addCustomer\">            \r\n            <form onSubmit={addCustomer} class=\"form\">\r\n                \r\n              <div class=\"inline\">\r\n              <label for=\"name\">Name:&nbsp; </label>\r\n              <input onChange={handleChange} type=\"text\" name=\"name\" value={customer.name} />\r\n              {errors.name && <p className=\"error\">{errors.name}</p>}\r\n              </div>\r\n\r\n              <div class=\"inline\">\r\n              <label for=\"email\">Email:&nbsp;</label>\r\n              <input onChange={handleChange} type=\"text\" name=\"email\" value={customer.email} />\r\n              {errors.email && <p className=\"error\">{errors.email}</p>}\r\n              </div>\r\n\r\n              <div class=\"inline\">\r\n              <label for=\"text\">Contact No.&nbsp;</label>\r\n              <input onChange={handleChange} type=\"text\"  name=\"contactNo\" value={customer.contactNo} />\r\n              {errors.contactNo && <p className=\"error\">{errors.contactNo}</p>}\r\n              </div>\r\n\r\n              <div class=\"inline\">\r\n              <label for=\"address\">Address:&nbsp;</label>\r\n              <input onChange={handleChange} type=\"text\" name=\"address\" value={customer.address} />\r\n              {errors.address && <p className=\"error\">{errors.address}</p>}\r\n              </div>\r\n\r\n              <div class=\"inline form-button\">          \r\n              <input class=\"button\" type=\"submit\" value=\"Add Customer\" />\r\n              </div><br/>\r\n        \r\n            </form>\r\n            <p class=\"form-error\">{errors.error}.</p>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default AddCustomer;","import ShowCustomers from './components/ShowCustomers';\nimport AddCustomer from './components/AddCustomer';\nfunction App() {\n    return ( \n        <div className = \"App\" >\n                <center><h2 id=\"title\">CUSTOMER PANEL</h2>\n                <AddCustomer/>   \n                <ShowCustomers/>\n                </center>\n        </div>\n    );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}