{"version":3,"sources":["components/ShowCustomers.jsx","components/validation.js","components/AddCustomer.jsx","App.js","reportWebVitals.js","index.js"],"names":["ShowCustomers","showCustomers","setShow","useState","customers","setCustomers","name","email","contactNo","address","showCustomerInfo","taggle","fetch","then","res","ok","json","jsonRes","count","_jsx","children","_jsxs","class","id","onClick","type","value","className","map","customer","removeCustomer","_id","axios","delete","alert","window","location","reload","validation","errors","test","error","AddCustomer","setCustomer","setErrors","dataIsCorrect","setDataIsCorrect","handleChange","e","target","prevInput","useEffect","Object","keys","length","newCustomer","post","onSubmit","preventDefault","for","onChange","App","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b794cf99.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useState } from 'react';\r\n\r\nfunction ShowCustomers(){\r\n    \r\n            const [showCustomers, setShow]=useState(false)\r\n\r\n            const [customers, setCustomers] = useState([{\r\n                name: 'loading...',\r\n                email: 'loading...',\r\n                contactNo: 'loading...',\r\n                address: 'loading...'\r\n            }])\r\n\r\n            function showCustomerInfo(taggle){\r\n                if(taggle){\r\n                    fetch('/allCustomers').then(res => {\r\n                        if (res.ok) {\r\n                            return res.json()\r\n                        }\r\n                    }).then(jsonRes => setCustomers(jsonRes))\r\n                    setShow(true)\r\n                } else {\r\n                    setShow(false)\r\n                }\r\n            }\r\n            \r\n            function removeCustomer(id){\r\n                axios.delete('/removeCustomer/'+id);\r\n                // console.log(id);\r\n                alert(\"---- Customer has been removed from record ----\");\r\n                window.location.reload()\r\n            }             \r\n            let count=1;\r\n    return(\r\n        <div>\r\n            <center>\r\n            <div class=\"table_buttons\">\r\n                <input id=\"table_button\" onClick={()=>showCustomerInfo(true)} class=\"button\" type=\"submit\" value=\"Show customers\" />\r\n                <input id=\"table_button\" onClick={()=>showCustomerInfo(false)} class=\"button\" type=\"submit\" value=\"Hide customers\" />\r\n            </div>\r\n            {showCustomers&&\r\n              <div class=\"customers\">\r\n           \r\n                    <table className=\"col-12\">\r\n\r\n                        <thead>\r\n                            <tr class=\"table_header\">\r\n                                <th>No.</th>\r\n                                <th>Name</th>\r\n                                <th>Email</th>\r\n                                <th>Contact No.</th>\r\n                                <th>Address</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n\r\n                        {customers.map(customer => {\r\n                            return (\r\n                            \r\n                            <tr>\r\n                                <td>{count++}</td>\r\n                                <td>{customer.name}</td>\r\n                                <td>{customer.email}</td>\r\n                                <td>{customer.contactNo}</td>\r\n                                <td>{customer.address}</td> \r\n                                <td> <input id=\"table_button\" onClick={()=>removeCustomer(customer._id)} class=\"button\" type=\"submit\" value=\"Delete\" /></td>                        \r\n                            </tr>\r\n                                   \r\n                            )\r\n                            })\r\n                        }\r\n\r\n                     </table>\r\n\r\n                </div>\r\n            }\r\n            </center>\r\n        </div>\r\n        \r\n\r\n    )\r\n}\r\nexport default ShowCustomers;","\r\nconst validation=(customer)=>{\r\n    let errors={};\r\n\r\n    if(!customer.name){\r\n        errors.error=\"Name is required\"\r\n    }else if(!customer.email){\r\n        errors.error=\"Email is invalid\"\r\n    }else if(!/\\S+@\\S+\\.\\S+/.test(customer.email)){\r\n        errors.error=\"Email is invalid\"\r\n    }else if(!customer.contactNo){\r\n        errors.error=\"Contact number is invalid\"\r\n    }else if(!/^[0][1-9]\\d{9}$|^[1-9]\\d{9}$/.test(customer.contactNo)){\r\n        errors.error=\"Contact number is invalid\"\r\n    }else if(!customer.address){\r\n        errors.error=\"Address is required\"\r\n    }\r\n    \r\n    return errors;   \r\n};\r\n\r\nexport default validation;","import React, { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport {useState} from 'react';\r\nimport validation from './validation';\r\n\r\nfunction AddCustomer(){\r\n\r\n    const [customer, setCustomer] = useState([{\r\n        name: '',\r\n        email: '',\r\n        contactNo: '',\r\n        address: ''\r\n    }])\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const [dataIsCorrect, setDataIsCorrect] = useState(false);\r\n\r\n    function handleChange(e){\r\n        const{name,value}=e.target;\r\n        setCustomer(prevInput=>{\r\n          return(\r\n            {\r\n              ...prevInput,\r\n              [name]:value\r\n            }\r\n          )\r\n        })\r\n      }\r\n    \r\n    useEffect(()=>{\r\n      if(Object.keys(errors).length===0&&dataIsCorrect){\r\n        const newCustomer={\r\n            name: customer.name ,\r\n            email: customer.email,\r\n            contactNo: customer.contactNo,\r\n            address: customer.address\r\n        }\r\n        axios.post('/addCustomer',newCustomer);\r\n        setCustomer({\r\n            name: '',\r\n            email: '',\r\n            contactNo: '',\r\n            address: ''\r\n        });\r\n        alert(\"---- New customer added ----\");\r\n        window.location.reload();\r\n      }\r\n    },[errors]);\r\n\r\n      function addCustomer(e){\r\n        e.preventDefault();\r\n        setErrors(validation(customer));\r\n        setDataIsCorrect(true);\r\n    }\r\n        \r\n\r\n    return(\r\n        <div class=\"addCustomer\">            \r\n            <form onSubmit={addCustomer} class=\"form\">\r\n                \r\n              <div class=\"inline\">\r\n              <label for=\"name\">Name:&nbsp; </label>\r\n              <input onChange={handleChange} type=\"text\" name=\"name\" value={customer.name} />          \r\n              </div>\r\n\r\n              <div class=\"inline\">\r\n              <label for=\"email\">Email:&nbsp;</label>\r\n              <input onChange={handleChange} type=\"text\" name=\"email\" value={customer.email} />    \r\n              </div>\r\n\r\n              <div class=\"inline\">\r\n              <label for=\"text\">Contact No.&nbsp;</label>\r\n              <input onChange={handleChange} type=\"text\"  name=\"contactNo\" value={customer.contactNo} />             \r\n              </div>\r\n\r\n              <div class=\"inline\">\r\n              <label for=\"address\">Address:&nbsp;</label>\r\n              <input onChange={handleChange} type=\"text\" name=\"address\" value={customer.address} />\r\n              </div>\r\n              \r\n              <div class=\"inline form-button\">          \r\n              <input class=\"button\" type=\"submit\" value=\"Add Customer\" />\r\n              </div><br/>\r\n        \r\n            </form>\r\n            <p class=\"form-error\">{errors.error}.</p>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default AddCustomer;","import ShowCustomers from './components/ShowCustomers';\r\nimport AddCustomer from './components/AddCustomer';\r\nfunction App() {\r\n    return ( \r\n        <div className = \"App\" >\r\n                <center><h2 id=\"title\">CUSTOMER PANEL</h2>\r\n                <AddCustomer/>   \r\n                <ShowCustomers/>\r\n                </center>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\n\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}